plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ticketmate'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

    maven {
        name = 'chuseok22NexusSnapshots'
        url = uri('https://nexus.chuseok22.com/repository/maven-snapshots/')
        metadataSources {
            mavenPom()
            artifact()
        }
    }
    maven {
        name = 'chuseok22NexusReleases'
        url = uri('https://nexus.chuseok22.com/repository/maven-releases/')
        metadataSources {
            mavenPom()
            artifact()
        }
    }
    maven {
        url "http://suh-project.synology.me:9999/repository/maven-releases/"
        allowInsecureProtocol = true
    }
}

dependencies {
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.3'

    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Hibernate 호환성문제
    implementation group: 'com.fasterxml', name: 'classmate', version: '1.7.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // JUnit
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // MapStruct 라이브러리
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    // MapStruct 어노테이션 프로세서
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    //S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // DataFaker
    implementation 'net.datafaker:datafaker:2.4.2'

    // FireBase
    implementation group: 'com.google.firebase', name: 'firebase-admin', version: '9.2.0'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.27.0'

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // RabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'

    // Reactor Netty
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty:3.0.0'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Chuseok22 Api Change Log
    implementation 'com.chuseok22:ApiChangeLog:1.0.1'

    // Google Gen AI (Vertex AI) 클라이언트
    implementation 'com.google.genai:google-genai:1.6.0'

    // JSON 으로부터 ServiceAccountCredentials 로딩
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.19.0'

    // Hibernate Vector 모듈 활성화
    implementation 'org.hibernate.orm:hibernate-vector:6.4.0.Final'

    // CoolSMS
    implementation 'net.nurigo:sdk:4.3.2'

    // 역직렬화
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Suh-Random-Engine
    implementation 'me.suhsaechan:suh-random-engine:1.1.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file('src/main/generated')
}
