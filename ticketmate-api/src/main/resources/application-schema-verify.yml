spring:
  main:
    web-application-type: none
    allow-bean-definition-overriding: false

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres

  autoconfigure:
    exclude:
      # 보안/리액티브 OAuth2 충돌 제거
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration
      - org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration
      # 외부 인프라(테스트에 불필요)
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration
      - org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration

  jpa:
    hibernate:
      ddl-auto: validate  # [CHANGED] DB 변경 없이 매핑-스키마 호환성 검증
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
      # [CHANGED] 엔티티 기준 DDL 스냅샷 파일 생성 (DB에는 적용 안 함)
      jakarta:
        persistence:
          schema-generation:
            create-source: metadata
            database:
              action: none
            scripts:
              action: create
              create-target: build/generated/hibernate-ddl.sql
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
